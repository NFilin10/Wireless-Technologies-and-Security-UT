#!/usr/bin/env python3

'''
Wireless Technologies and Security (LTAT.04.009) Homework 15
Installation: sudo apt install python3-matplotlib
Execution: python3 ir_protocol_plot.py

Name: Nikita Filin

Protocol: NEC

Bit pattern of captures
Capture 1: 00000000111111110000001011111101
Capture 2: 00000000111111110001101011100101
Capture 3: 00000000111111110011101011000101
Capture 4: 00000000111111111101000000101111
Capture 5: 00000000111111110000001011111101
Capture 6: 00000000111111111110000000011111


Final state of LED lights: 
Capture 1: FF02FD Power
Capture 2: FF1AE5 R
Capture 3: FF3AC5 Increase Brightness
Capture 4: FFD02F Flash
Capture 5: FF02FD Power
Capture 6: FFE01F Fade 7
'''

import matplotlib.pyplot as plt


captures = {
    "Capture 1": [+9050, -4450, +550, -600, +500, -600, +550, -600, +550, -550, +550, -600, +550, -600, +500, -600, +550, -600, +550, -1700, +550, -1650, +550, -1700, +550, -1650, +550, -1700, +550, -1650, +600, -1650, +550, -1700, +500, -600, +550, -600, +550, -550, +550, -600, +550, -600, +550, -550, +550, -1700, +550, -550, +550, -1700, +600, -1650, +550, -1650, +550, -1700, +550, -1650, +600, -1650, +550, -600, +500, -1700, +550, -30100],
    "Capture 2": [+9050, -4400, +550, -600, +600, -550, +500, -600, +550, -600, +550, -600, +500, -600, +550, -600, +550, -550, +600, -1650, +550, -1700, +550, -1650, +600, -1650, +550, -1650, +600, -1650, +550, -1700, +500, -1700, +550, -600, +550, -550, +600, -550, +550, -1700, +500, -1700, +600, -550, +550, -1650, +600, -550, +550, -1650, +550, -1700, +550, -1700, +550, -550, +550, -600, +550, -1650, +550, -600, +600, -1650, +550, -30100],
    "Capture 3": [+9100, -4400, +650, -500, +600, -550, +600, -550, +550, -550, +600, -550, +600, -550, +550, -550, +600, -550, +600, -1600, +600, -1650, +600, -1650, +550, -1650, +600, -1650, +550, -1650, +600, -1650, +600, -1650, +550, -550, +600, -500, +600, -1650, +600, -1600, +600, -1650, +600, -550, +550, -1650, +600, -550, +600, -1600, +600, -1650, +600, -500, +600, -550, +550, -600, +550, -1650, +600, -550, +550, -1700, +550, -30100],
    "Capture 4": [+9000, -4500, +550, -600, +500, -600, +550, -600, +550, -600, +500, -600, +550, -600, +500, -600, +550, -600, +550, -1700, +500, -1700, +550, -1700, +550, -1650, +550, -1700, +550, -1700, +500, -1700, +550, -1700, +500, -1700, +550, -1700, +550, -550, +600, -1650, +550, -600, +550, -550, +550, -600, +550, -600, +500, -600, +550, -600, +550, -1650, +600, -550, +550, -1700, +500, -1700, +550, -1700, +550, -1650, +550, -30100],
    "Capture 5": [+9100, -4400, +600, -550, +600, -550, +600, -550, +550, -550, +600, -500, +600, -550, +600, -500, +650, -500, +600, -1650, +600, -1600, +600, -1650, +600, -1600, +600, -1650, +600, -1600, +600, -1650, +550, -1700, +550, -550, +550, -600, +500, -600, +550, -600, +550, -600, +550, -550, +600, -1650, +550, -600, +550, -1650, +600, -1650, +550, -1650, +600, -1650, +550, -1650, +600, -1650, +600, -550, +500, -1700, +600, -30100],
    "Capture 6": [+9000, -4500, +550, -600, +550, -550, +550, -600, +550, -600, +500, -600, +550, -600, +550, -550, +550, -600, +550, -1700, +550, -1650, +550, -1700, +550, -1650, +550, -1700, +550, -1700, +550, -1650, +550, -1700, +550, -1650, +550, -1700, +600, -1650, +550, -550, +600, -550, +550, -550, +550, -600, +550, -600, +500, -600, +550, -600, +550, -600, +500, -1700, +600, -1650, +550, -1650, +600, -1650, +550, -1700, +550, -30100]
}


def generate_plot_data(timing_values):
    x_values = []
    y_values = []
    x = 0

    for timing in timing_values:
        new_x_values = [x, x + abs(timing)]
        new_y_values = [1, 1] if timing > 0 else [0, 0]

        x_values += new_x_values
        y_values += new_y_values

        x += abs(timing)

    x_values = [0] + x_values + [x_values[-1]]
    return x_values, y_values


for capture_name, timing_values in captures.items():
    x_values, y_values = generate_plot_data(timing_values)
    y_values = [0] + y_values + [0]

    plt.figure(figsize=(15, 6))
    plt.plot(x_values, y_values)
    plt.xlabel('Time (microseconds)')
    plt.ylabel('Signal')
    plt.title(f'{capture_name}')
    plt.show()





